{"version":3,"sources":["logo.svg","testDragandDrop/DragAndDrop.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["DragAndDrop","props","useState","dragStart","setDragStart","id","className","text","bottles","setBottles","window","addEventListener","list","document","getElementsByClassName","i","length","getElementById","dragOver","dragEnter","dragLeave","e","preventDefault","console","log","target","map","element","index","draggable","onDrop","changeData","forEach","depot","onDragStart","title","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.3d5d8d62.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from 'react';\r\nimport './style.css'\r\n\r\nfunction DragAndDrop(props) {\r\n    const[dragStart,setDragStart]=useState(null);\r\n    const[bottles,setBottles]=useState([\r\n        {id:\"c1S1R1C1\",className:\"rouge\",text:\"R1C1\"},\r\n        {id:\"c1S1R1C2\",className:\"rouge\",text:\"R1C2\"},\r\n        {id:\"c1S1R1C3\",className:\"vide\",text:\"R1C3\"},\r\n        {id:\"c1S1R1C4\",className:\"vide\",text:\"R1C4\"},\r\n        {id:\"c1S1R1C5\",className:\"vide\",text:\"R1C5\"},\r\n        {id:\"c1S1R1C6\",className:\"vide\",text:\"R1C6\"},\r\n        {id:\"c1S1R2C1\",className:\"rouge\",text:\"R1C1\"},\r\n        {id:\"c1S1R2C2\",className:\"rouge\",text:\"R1C2\"},\r\n        {id:\"c1S1R2C3\",className:\"vide\",text:\"R1C3\"},\r\n        {id:\"c1S1R2C4\",className:\"vide\",text:\"R1C4\"},\r\n        {id:\"c1S1R2C5\",className:\"vide\",text:\"R1C5\"},\r\n        {id:\"c1S1R2C6\",className:\"vide\",text:\"R1C6\"},\r\n        {id:\"c1S1R3C1\",className:\"vide\",text:\"R1C1\"},\r\n        {id:\"c1S1R3C2\",className:\"rouge\",text:\"R1C2\"},\r\n        {id:\"c1S1R3C3\",className:\"vide\",text:\"R1C3\"},\r\n        {id:\"c1S1R3C4\",className:\"vide\",text:\"R1C4\"},\r\n        {id:\"c1S1R3C5\",className:\"rouge\",text:\"R1C5\"},\r\n        {id:\"c1S1R3C6\",className:\"vide\",text:\"R1C6\"},\r\n        {id:\"c1S1R4C1\",className:\"rouge\",text:\"R1C1\"},\r\n        {id:\"c1S1R4C2\",className:\"vide\",text:\"R1C2\"},\r\n        {id:\"c1S1R4C3\",className:\"vide\",text:\"R1C3\"},\r\n        {id:\"c1S1R5C4\",className:\"vide\",text:\"R1C4\"},\r\n        {id:\"c1S1R5C5\",className:\"vide\",text:\"R1C5\"},\r\n        {id:\"c1S1R5C6\",className:\"vide\",text:\"R1C6\"}\r\n    ])\r\n\r\n    if(window.addEventListener && dragStart){\r\n        let list=document.getElementsByClassName('vide');\r\n        for(let i=0;i<list.length;i++){\r\n            document.getElementById(list[i].id).addEventListener('dragover',dragOver);\r\n            document.getElementById(list[i].id).addEventListener('dragenter',dragEnter);\r\n            document.getElementById(list[i].id).addEventListener('dragleave',dragLeave);\r\n        }        \r\n    }\r\n    function dragOver(e){\r\n        e.preventDefault();\r\n        return false\r\n    }\r\n    function dragEnter(e){\r\n        console.log(e.target.id)\r\n        //e.target.className=\"vide dragEnter\"\r\n\r\n    }\r\n    function dragLeave(e){\r\n        console.log(e.target.id)\r\n        //e.target.className=\"vide\"\r\n    }\r\n    function depot(e){\r\n        let changeData=[...bottles]\r\n        changeData.forEach(element=>{\r\n            if(element.id===e.target.id){\r\n                element.className=document.getElementById(dragStart).className;                \r\n            }\r\n            if(element.id===dragStart){\r\n                element.className=\"vide\"\r\n            }\r\n        })\r\n        setBottles(changeData)\r\n        setDragStart(null)\r\n    };\r\n\r\n    return (\r\n        <div className='shelf'>\r\n            {bottles.map((element,index)=>{\r\n                return <div key={index} id={element.id} className={element.className} \r\n                draggable={element.className===\"vide\"?false:true} \r\n                onDrop={(e)=>{depot(e)}}\r\n                onDragStart={(e)=>{setDragStart(e.target.id)}}\r\n                title={\"Corton Charlemagne \"}\r\n                >{element.text}</div>\r\n            })}\r\n        </div>       \r\n    );\r\n}\r\n\r\nexport default DragAndDrop;","import logo from './logo.svg';\nimport './App.css';\nimport DragAndDrop from '../src/testDragandDrop/DragAndDrop'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DragAndDrop/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}